Description: This is the stack for the network components of Project #2
Parameters:
  Environment:
    Description: This is the name of the environment to set as the k,v pairs
    Type: String
  VPCCIDR:
    Description: This is the variable to have the vpc cidr range
    Type: String
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Description: This is the public subnet 1 cidr range
    Type: String
    Default: 10.0.0.0/24
  PublicSubnet2CIDR:
    Description: This is the public subnet 2 cidr range
    Type: String 
    Default: 10.0.1.0/24
  PrivateSubnet1CIDR:
    Description: This is the private subnet 1 cidr range
    Type: String 
    Default: 10.0.2.0/24
  PrivateSubnet2CIDR:
    Description: This is the private subnet 2 cidr range
    Type: String 
    Default: 10.0.3.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: !Ref Environment

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: Name
          Value: !Ref Environment

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
      
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${Environment}-PubSubnet1
      VpcId: !Ref VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${Environment}-PubSubnet2
      VpcId: !Ref VPC
  
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: !Ref Environment
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${Environment}-PrivSubnet1
      VpcId: !Ref VPC  

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name
          Value: !Sub ${Environment}-PrivSubnet2
      VpcId: !Ref VPC        

  Private1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: !Ref Environment
      VpcId: !Ref VPC

  Private2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: !Ref Environment
      VpcId: !Ref VPC

  ElasticIP1:
    Type: AWS::EC2::EIP
    DependsOn: IGWAttachment
    Properties:
      Domain: vpc

  ElasticIP2:
    Type: AWS::EC2::EIP
    DependsOn: IGWAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet1
      AllocationId: !GetAtt ElasticIP1.AllocationId

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref PublicSubnet2
      AllocationId: !GetAtt ElasticIP2.AllocationId 

  Private1Route:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
      RouteTableId: !Ref Private1RouteTable      

  Private2Route:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2
      RouteTableId: !Ref Private2RouteTable  

  PrivateSubnet1TableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Private1RouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2TableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Private2RouteTable
      SubnetId: !Ref PrivateSubnet2

#The following should be in a new script as a new stack
          
Outputs:
  VPC: 
    Description: This is the value of VPC to export
    Value: !Ref VPC
    Export:
      Name: !Sub ${Environment}-VPCID

  PublicSubnet1Export:
    Description: This is the value of public subnet 1 to export
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${Environment}-PubSub1

  PublicSubnet2Export:
    Description: This is the value of public subnet 2 to export
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${Environment}-PubSub2

  PrivateSubnets:
      Description: A list of the private subnets
      Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
      Export:
        Name: !Sub ${Environment}-PrivSubs



      